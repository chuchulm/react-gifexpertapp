{"version":3,"sources":["components/AddCategory.js","helpers/GetGifs.js","components/GitGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputvalue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","prototype","PropTypes","func","isRequired","GetGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GitGridItem","console","log","className","src","alt","GifGrid","loading","state","setstate","useEffect","then","imgs","useFetchGifs","key","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"wPAGaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EAEVC,mBAAS,IAFC,mBAEvCC,EAFuC,KAE3BC,EAF2B,KAqB9C,OACI,0BAAMC,SAdW,SAAEC,GACnBA,EAAEC,iBAEEJ,EAAWK,OAAOC,OAAS,IAC3BR,GAAe,SAAAS,GAAI,OAAKP,GAAL,mBAAoBO,OACvCN,EAAc,OAUd,2BACCO,KAAK,OACLC,MAAUT,EACVU,SAtBiB,SAAEP,GACxBF,EAAcE,EAAEQ,OAAOF,YA6B/BZ,EAAYe,UAAW,CACnBd,c,OAAee,EAAUC,KAAKC,Y,2BCjCrBC,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DAEbC,EAFa,iDAEoCC,UAAWH,GAF/C,+DAGAI,MAAOF,GAHP,cAGbG,EAHa,gBAIIA,EAAKC,OAJT,uBAIXC,EAJW,EAIXA,KAEEC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EACzB,MAAM,CACLC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAVxB,kBAeTM,GAfS,4CAAH,sDCHPO,EAAc,SAAC,GAAwB,IAAtBJ,EAAqB,EAArBA,GAAIC,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IAIrC,OAFDc,QAAQC,IAAIN,EAAIC,EAAOV,GAGlB,yBAAKgB,UAAU,4DACX,yBAAKC,IAAKjB,EAAKkB,IAAKR,IACpB,2BAAIA,KCJHS,EAAU,SAAC,GAAgB,IAAfrB,EAAc,EAAdA,SAAc,ECFX,SAAEA,GAAe,IAAD,EAEdlB,mBAAS,CAC/ByB,KAAM,GACNe,SAAS,IAJ2B,mBAEjCC,EAFiC,KAE1BC,EAF0B,KA+BxC,OAxBAC,qBAAU,WAIF1B,EAASC,GACR0B,MAAM,SAAAC,GACHH,EAAS,CACLjB,KAAMoB,EACNL,SAAS,SAStB,CAAEtB,IAOEuB,EDzB0BK,CAAc5B,GAAlCa,EAJsB,EAI3BN,KAAae,EAJc,EAIdA,QAWrB,OATKN,QAAQC,IAAIK,GACZN,QAAQC,IAAIJ,GASb,oCACA,wBAAIK,UAAU,wDAAyDlB,GAEnEsB,GAAW,uBAAGJ,UAAU,qCAAb,WAEf,yBAAKA,UAAU,aAKDL,EAAOJ,KAAK,SAAAC,GAAG,OAEf,kBAAC,EAAD,eAAamB,IAAKnB,EAAIC,IAAUD,UEzBxCoB,EAAc,WAAO,IAAD,EAEEhD,mBAAS,CAAC,cAFZ,mBAE3BiD,EAF2B,KAEflD,EAFe,KAU9B,OACI,oCACI,4CACA,kBAAC,EAAD,CAAaA,cAAkBA,IAC/B,6BAGC,4BAGSkD,EAAWtB,KAAK,SAAAT,GAAQ,OACtB,kBAAC,EAAD,CACA6B,IAAM7B,EACNA,SAAYA,UCzBpCgC,IAASC,OAEL,kBAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.1b2e36fe.chunk.js","sourcesContent":["import React, {useState} from 'react'\nimport PropTypes from  'prop-types'\n\nexport const AddCategory = ({ setCategories }) => {\n\n    const [inputValue, setInputvalue] = useState('');\n    \n    const handleImputChange = ( e ) => {\n        setInputvalue(e.target.value);\n    }\n\n    const handleSubmit = ( e ) => {\n        e.preventDefault()\n        \n        if( inputValue.trim().length > 2 ) {\n            setCategories( cats => [inputValue, ...cats ] );\n            setInputvalue('');\n\n        }\n        \n       \n    \n    }\n\n    return (\n        <form onSubmit={ handleSubmit }>\n            <input\n             type='text'\n             value = { inputValue }\n             onChange={ handleImputChange }\n             />\n        </form>\n           \n        \n    )\n}\n\nAddCategory.prototype ={\n    setCategories: PropTypes.func.isRequired\n}\n","\n\n\n\n\nexport const GetGifs = async( category ) =>  {\n\n    const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI( category ) }&limit=10&api_key=zVYR4rnnMChHLIO2LpeEc44u2r0ulw6V`\n    const resp = await fetch( url );\n    const { data } = await resp.json();\n        \n        const gifs = data.map(img => {\n            return{\n             id: img.id,\n             title: img.title,\n             url: img.images?.downsized_medium.url\n            }\n        })\n\n\n       return gifs;\n    \n\n    }\n  \n    ","import React from 'react'\n\nexport const GitGridItem = ({ id, title, url }) => {\n\n   console.log(id, title, url);\n\n    return (\n        <div className=\"card animate__animated animate__fadeIn animate__delay-2s\">\n            <img src={url} alt={title}/>\n            <p>{title}</p>\n        </div>\n    )\n}\n","import React from 'react'\nimport { useFetchGifs } from '../hooks/useFetchGifs'\nimport { GitGridItem } from './GitGridItem';\n// import { GetGifs } from '../helpers/Getgifs';\n\nexport const GifGrid = ({category}) => {\n\n//     const [images, setImages] = useState( [] );\n\n    const { data:images, loading } = useFetchGifs( category );\n\n         console.log(loading)\n         console.log(images)\n\n\n\n\n\n\n    \n    return (\n        <>\n        <h3 className=\" animate__animated animate__fadeIn animate__delay-2s\">{ category }</h3>\n   \n           {loading && <p className=\" animate__animated animate__flash\">loading</p> }\n\n        <div className=\"card-grid\">\n           \n            \n                    {\n                      \n                      images.map( img =>(\n                           \n                      <GitGridItem key={img.id}  { ...img }/>\n                              \n\n                      ))\n                     \n                     }\n               \n                \n            \n        </div>\n        </>\n    )\n}\n","import { useState, useEffect } from 'react'\nimport { GetGifs } from '../helpers/GetGifs';\n\nexport const useFetchGifs = ( category ) => {\n    \n    const [state, setstate] = useState({\n        data: [],\n        loading: true\n    });\n   \n    useEffect(() => {\n        \n        \n\n            GetGifs( category )\n            .then( imgs => {\n                setstate({\n                    data: imgs,\n                    loading: false\n                });\n            })\n\n        \n        \n        \n        \n\n    }, [ category ])\n\n\n\n    \n      \n\n    return state; //{data:[], loading: true};\n\n}\n","import React, { useState } from 'react'\nimport { AddCategory } from './components/AddCategory';\nimport { GifGrid } from './components/GifGrid';\n\n\n\n\n\nexport const  GifExpertApp =() => {\n\nconst [categories, setCategories] = useState(['one Punch']);\n\n/*const handleAdd = () => {\n    setCategories(['hunterXHunter', ...categories])\n    setCategories(cats =>[...casts, 'hunterCHunter']);\n}*/\n\n\n    return (\n        <>\n            <h2>GifExpertApp</h2>\n            <AddCategory setCategories = { setCategories }/>\n            <hr />\n        \n \n             <lo>\n     \n                  {\n                      categories.map( category => (\n                        <GifGrid \n                        key={ category }\n                        category ={ category }/>\n                        \n                        ))\n     \n                  }\n             \n                 \n             </lo>\n\n        </>\n    )\n}\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport {GifExpertApp} from './GifExpertApp'\n\n\nReactDOM.render(\n  \n    <GifExpertApp />,\n  \n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n"],"sourceRoot":""}